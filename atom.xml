<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[naonya3.me]]></title>
  <link href="http://naonya3.github.io/atom.xml" rel="self"/>
  <link href="http://naonya3.github.io/"/>
  <updated>2014-02-03T01:59:51+09:00</updated>
  <id>http://naonya3.github.io/</id>
  <author>
    <name><![CDATA[にょす(@naonya3)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unity入門記録 01]]></title>
    <link href="http://naonya3.github.io/blog/2014/02/03/unity-practice01/"/>
    <updated>2014-02-03T01:30:44+09:00</updated>
    <id>http://naonya3.github.io/blog/2014/02/03/unity-practice01</id>
    <content type="html"><![CDATA[<p>iPhoneプログラマーとして2年間Objective-Cを書いて、その前にFlashを2年。</p>

<p>Unity4.3から2Dゲームも作りやすくなったということなので、趣味ではじめてみようかと。</p>

<p>全く事前知識がないので、初心者の記録として晒しておきます。</p>

<p>途中で飽きてやめたらごめんなさい。</p>

<h2>ダウンロード</h2>

<p>ここからダウンロード。</p>

<p><a href="http://japan.unity3d.com/unity/download/">http://japan.unity3d.com/unity/download/</a></p>

<p>ちなみに初心者なので無料版で十分（なはず）。</p>

<p>iPhone/Androidにも無料で書き出せるようになったのは制作モチベーション上がる。</p>

<h2>起動</h2>

<p>サンプルと思われる、すごいゲーム出てきた。</p>

<p><img src="https://copy.com/thumbs_public/6TU12KARC8ex/startup.png?revision=42&amp;size=512" alt="screenshot" /></p>

<p>パネルたくさんファイルたくさんで、何したらいいか全くわからん。</p>

<p>見た目で挫折しそう。</p>

<h2>チュートリアルあった</h2>

<p>本家にドキュメントとチュートリアルがあった。</p>

<p><a href="http://japan.unity3d.com/developer/document/">http://japan.unity3d.com/developer/document/</a></p>

<p>このチュートリアルをとりあえずやってみる。</p>

<p><a href="http://japan.unity3d.com/developer/document/tutorial/my-first-unity/">http://japan.unity3d.com/developer/document/tutorial/my-first-unity/</a></p>

<p>ブロック崩しが作れるらしい。</p>

<h2>一応出来た</h2>

<p><a href="http://naonya3.github.io/contents/unity/practice01/" target="_blank"><strong>Unity Web Playerが必要です。</strong></a></p>

<h2>iPhone用に書き出す</h2>

<p>せっかくなのでiPhoneで動作させたい。</p>

<p>File > Build Settingからできる。</p>

<p>あとはXcodeプロジェクトが作られるので、開いてビルドすればいいだけ。</p>

<p>ココらへんはUnityというよりiPhone開発の話なので必要ならググるとわかる。</p>

<p><strong>しかし、チュートリアルのままだとiPhone上でキー入力のInputがないので、ラケットの操作ができない。</strong></p>

<p>多分マウス入力の値を見るようにすれば、タッチ座標に変換されるはずなので、</p>

<p>チュートリアルのラケットに対応するスクリプトの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function Update () {
</span><span class='line'>  rigidbody.AddForce(transform.right * Input.GetAxisRaw("Horizontal") * Accel, ForceMode.Impulse);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>この<code>Horizontal</code>の部分を<code>Mouse X</code>に変更した。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function Update () {
</span><span class='line'>  rigidbody.AddForce(transform.right * Input.GetAxisRaw("Mouse X") * Accel, ForceMode.Impulse);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><code>Mouse X</code>という値はInput Manager(Edit > Project Settings > Input > inspectorパネル)をみるとわかる。</p>

<p><img src="https://copy.com/thumbs_public/JOIaUGoJS4O1/screenshot.png?revision=41&amp;size=512" alt="screenshot" /></p>

<p>こちらは、実機のスクリーンショットです。</p>

<p>見切れてるし、微妙な操作感だけど簡単に動かすことができた。</p>

<h2>今日のまとめ</h2>

<p>Unityのインストール時間を除けばだいたい１時間あればここまで出来る。</p>

<p>まずはプログラミング能力より、Unityというアプリケーションの操作に慣れる事と、何ができるのかを知る必要がありそう。</p>

<p>ともあれ、Unity入門は簡単だったので時間あったらやってみると楽しいと思う。</p>

<p>チュートリアルの次回分がなくなった(2014.2.2現在)
ので、このあとは自分でブロック崩しを実装する必要がある。</p>

<p>当たり判定の取り方がわかれば、多分すぐ出来るはず。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IRKit]]></title>
    <link href="http://naonya3.github.io/blog/2014/01/05/irkit/"/>
    <updated>2014-01-05T23:04:00+09:00</updated>
    <id>http://naonya3.github.io/blog/2014/01/05/irkit</id>
    <content type="html"><![CDATA[<p><img src="https://copy.com/thumbs_public/ZcK4LNj1hEy1/IMG_7214.JPG?revision=35&amp;size=512" alt="IRKit" /></p>

<p>遠隔操作できる家電リモコン。</p>

<p>お布団の中からリビングのエアコンを入れてみたり
外出先からエアコンを入れてみたり</p>

<p>・・・寒いので、エアコンネタばかり出てきてしまいましたが、、</p>

<p>前職の先輩の<a href="https://twitter.com/maaash">mash</a>さんが、そういったことを手軽に行えるようにするデバイス「<a href="http://getirkit.com/">IRKit</a>」をなんと作り上げてしまったので、お試し版をお借りしました。</p>

<p>まだお試し版ということで、専用アプリがリリースされていなかったりと通常より手順がむずいですが、正式リリース時にはすごく使いやすいデバイスになっていると思います。</p>

<p>たぶんWifiが入っている家なら、IRKitを電源に差し、専用アプリからIRKitにアクセスするだけで使えちゃえます。</p>

<p>ということで、設定して遊んでみました。</p>

<h2>IRKitの初期設定</h2>

<p>まずはIRKitをWifiに接続するためにアプリをインストールします。</p>

<p>先ほど、専用アプリがリリースされていないと書きましたが、<a href="https://github.com/irkit/ios-sdk">github</a>にはソースコードがありますので、そちらをインストールして使います。</p>

<p><code>Minimal</code>というプロジェクトが設定アプリ＋αです。</p>

<p>ビルドにはCocoaPodで必要ライブラリをインストールする必要がありますが、正式版ではあまり関係のない話だと思いますので省略します。</p>

<p>アプリを起動して、画面の指示にしたがって設定するだけです。</p>

<p>と、言っても<strong>たったの3STEP</strong>です。</p>

<ol>
<li>MicroUSBでIRKitを電源に接続</li>
<li>アプリに接続する無線LANの情報を入力する</li>
<li><strong>モールス信号</strong>でIRKitに無線LANの設定情報を送る</li>
</ol>


<p><img src="https://copy.com/thumbs_public/Y4j7vxtPuE7o/IMG_7198.JPG?revision=36&amp;size=512" alt="モールス信号で無線の設定情報を送る" /></p>

<p>右はモールス信号を送っている所です。遊び心があってすごい好きです。</p>

<p>設定が完了すると、赤色だったSTATUSランプが青色になります。</p>

<h2>IRKitでリモコンの信号を受信する</h2>

<p><strong>IRKitに向けてリモコンを押すだけ</strong>です。</p>

<p><img src="https://copy.com/thumbs_public/f1ddp3Yyl9Kr/IMG_7210.JPG?revision=37&amp;size=512" alt="押すだけ" /></p>

<p>先ほどインストールした<code>Minimal</code>というアプリはリモコンの信号を学習する機能がついていますので、そちらを使えば受信したデータを簡易的に管理することができます。</p>

<p>また、IRKit自身にHTTPサーバがあり、APIが動いていますので
直接APIを叩いて<strong>直近のリモコンのデータを取得</strong>したり、<strong>取得したリデータをIRKitから赤外線で送信</strong>させたりする事もできます。</p>

<p><a href="http://getirkit.com/">IRKit公式</a>サイトに書いてある情報のままですが、簡単にその方法を書きます</p>

<h2>IRKitのAPIを叩いてリモコンデータを取得する</h2>

<h3>まずはIRKitのIPアドレスを取得します</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dns-sd -B _irkit._tcp</span></code></pre></td></tr></table></div></figure>


<p>このまま打てばok。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dns-sd -B _irkit._tcp
</span><span class='line'>Browsing for _irkit._tcp
</span><span class='line'>DATE: ---Sun 05 Jan 2014---
</span><span class='line'>19:52:09.254  ...STARTING...
</span><span class='line'>Timestamp     A/R Flags if Domain                    Service Type              Instance Name
</span><span class='line'>19:52:09.911  Add     2  4 local.                    _irkit._tcp.              irkitd303</span></code></pre></td></tr></table></div></figure>


<p><code>Instance Name</code>の所を見ます。私の環境だと<code>irkitd303</code>ですね。</p>

<p>で、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dns-sd -G v4 [Instance Name].local</span></code></pre></td></tr></table></div></figure>


<p>です。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dns-sd -G v4 irkitd303.local
</span><span class='line'>DATE: ---Sun 05 Jan 2014---
</span><span class='line'>19:52:55.967  ...STARTING...
</span><span class='line'>Timestamp     A/R Flags if Hostname                  Address                                      TTL
</span><span class='line'>19:52:56.606  Add     2  4 irkitd303.local.          192.168.11.9                                 10</span></code></pre></td></tr></table></div></figure>


<p><code>Address</code>が分かりました。</p>

<h3>リモコンのデータを見る</h3>

<p>IRKitが受信した直近のリモコンから送信された赤外線データを見るには<code>messages</code>APIをつかいます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i "http://192.168.11.9/messages"
</span><span class='line'>HTTP/1.0 200 OK
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: IRKit/1.3.0.188.gbc9a662
</span><span class='line'>Content-Type: text/plain
</span><span class='line'>
</span><span class='line'>{"format":"raw","freq":38,"data":[4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,52381,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150]}</span></code></pre></td></tr></table></div></figure>


<p>JSONで直近のデータが返ってきました。Bodyが空だった場合、もう一度IRKitにリモコンを向けてボタンを押してください。
STATUSランプが点滅すればOKです。</p>

<p>ちなみのこのデータはテレビのボリュームアップ。</p>

<h3>IRKitからデータを送信する</h3>

<p>この受信データJSONを<code>messages</code>APIにPOSTすることで、同じ信号をIRKitから送信することができます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -i "http://192.168.11.9/messages" -d '{"format":"raw","freq":38,"data":[4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150]}'
</span><span class='line'>HTTP/1.0 200 OK
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: IRKit/1.3.0.188.gbc9a662
</span><span class='line'>Content-Type: text/plain</span></code></pre></td></tr></table></div></figure>


<p>IRKitのSTATUSランプが点灯し、テレビのボリュームが上がった。</p>

<p><strong>楽しいｗ</strong></p>

<h2>まとめ</h2>

<p>Curlから家電操作するの楽しぃぃぃ！</p>

<p>APIがシンプルですし、いろいろ組み合わせれば<strong><strong>ハイテクな家</strong></strong>が実現できそうです。</p>

<p>今はまだ準備中みたいですけど、そのうち外出先から自宅にあるIRKitへアクセスする手段も用意されるみたいです。</p>

<p>公式サイトの<code>IRKit Server HTTP API</code>がそうかな。</p>

<p>もちろん今でも少し知識があれば外部からIRKitにアクセスすることは可能です。</p>

<p>外出先から寒ぅい部屋のエアコンをつけたり消したりできて大変捗りそうでwktkですね！</p>

<p>ちなみに僕はエアコンの電源をよく切り忘れて奥さんに怒られるので、「外出先からエアコンの電源を切れる」というだけで精神衛生上とても良い効果がありそう。</p>

<hr />

<p>ちなみにIRKitは簡単に蓋が開けられて、中はArduinoなので私はここに温度センサをつけて、ハイテクアクアリウムを構築する予定です。</p>

<p><img src="https://copy.com/thumbs_public/wUTLjtZZMyVp/IMG_7205.JPG?revision=38&amp;size=512" alt="分解した" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AS3で言うEnterFrame的なの]]></title>
    <link href="http://naonya3.github.io/blog/2013/06/13/cadisplaylink/"/>
    <updated>2013-06-13T18:20:00+09:00</updated>
    <id>http://naonya3.github.io/blog/2013/06/13/cadisplaylink</id>
    <content type="html"><![CDATA[<p>Objective-Cでたまに使いたくなって、いつも忘れるのでメモ</p>

<p>CADisplayLink使う方法</p>

<p>QuartzCoreが必要</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;QuartzCore/QuartzCore.h&gt;</span></code></pre></td></tr></table></div></figure>


<p>で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_displayLink = [CADisplayLink displayLinkWithTarget:self selector:@selector(_enterFrameHandler:)];
</span><span class='line'>[_displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSRunLoopCommonModes];</span></code></pre></td></tr></table></div></figure>


<p>これで</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)_enterFrameHandler:(CADisplayLink *)displayLink
</span><span class='line'>{
</span><span class='line'>    // 何らかの処理
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>でOK。メソッド名はもうちょっとObjC風にしてあげて。</p>

<p>ポーズは</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_displayLink.paused = YES;</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy.comを画像ストレージにする]]></title>
    <link href="http://naonya3.github.io/blog/2013/05/25/strage-service-copy/"/>
    <updated>2013-05-25T14:22:00+09:00</updated>
    <id>http://naonya3.github.io/blog/2013/05/25/strage-service-copy</id>
    <content type="html"><![CDATA[<p>Qiitaや僕の大好きなMarkdownに画像を表示したい時、画像の置き場に困っていました。</p>

<p>つまるところ、無料で使えていい具合のストレージサービスを探していた訳です。</p>

<p>WEBに埋め込むのだから、直接画像に対して固有のURLが発行される事が条件です。
また、後々画像を移動させることもあるかもしれないので、ローカルには画像を残しておきたい。</p>

<p>そういう所だと、Dropboxの様にローカルのフォルダと同期出来るものが好ましかったのですがDropboxはあいにく個人的なファイルで容量が心許ないです。</p>

<p>有料アカウントにしてもいいですが、やっぱり無料でできるならやりたい。</p>

<p>そんな無料で大容量で画像に直リンクできちゃうストレージサービスどこかに無いかなー。</p>

<p><strong>ありました！</strong></p>

<p><a href="https://copy.com?r=elGQLg">Copy</a></p>

<p>なんと始めから<strong>15GB</strong>の容量が付いてきます。もちろん無料。始めた事をShareするとさらに<strong>+2GB</strong>！</p>

<p>しかも、しかも、この<a href="https://copy.com?r=elGQLg">招待リンク</a>から登録していただくとお互いに<strong>+5GB</strong>と<br/>
<strong>お得でWin-Winな設定になっております。</strong></p>

<p>まだ、対応サービスが少ないですが画像ストレージ的には困らないので
初回登録の容量が大きいうちに登録してWin-Winしておく事をおすすめします（再掲</p>

<p><strong>大事なURLなので、もう一度リンクを貼っておきますね。</strong></p>

<p><a href="https://copy.com?r=elGQLg">Copy</a></p>

<p>で、画像への直リンクの取得方法ですが、Copyのクライアントをインストールした方は
対象ディレクトリ以下のファイルを右クリックで</p>

<p><img src="https://copy.com/yKAkuLCQwNrmxP1G" alt="画像のURLの取得の仕方" /></p>

<p>これだけでURLがコピーされます。というか、これだけで公開されちゃうので注意してください。</p>

<p>ブラウザで直接アクセスするとリダイレクトされますが、<code>&lt;img&gt;</code>とかで指定する分には平気です。（2013.05.23現在</p>

<p>15GBもあればしばらく画像置き場に困らないはずです^q^</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WEBアプリのMarkdownエディタStackEditが便利]]></title>
    <link href="http://naonya3.github.io/blog/2013/05/24/stack-edit/"/>
    <updated>2013-05-24T01:42:00+09:00</updated>
    <id>http://naonya3.github.io/blog/2013/05/24/stack-edit</id>
    <content type="html"><![CDATA[<p>議事録やメモをとる時、Markdownで書くことが多いのですが、普段は<a href="http://mouapp.com/">Mou</a>や<a href="http://kobito.qiita.com/">Kobito</a>を使っています。(リアルタイムプレビューが必要なければなんだって書けるのですけど)</p>

<p>ただ、いちいちアプリを立ち上げるのが面倒すぎて頭の毛が抜けかかっていた所に、いい感じのWEBアプリを教えて貰らいました。</p>

<p><strong><a href="http://benweet.github.com/stackedit/">StackEdit</a></strong>です。</p>

<p><img src="https://copy.com/eMLtOXvITikVThCq" alt="StackEditor" /></p>

<p>リアルタイムプレビューはもちろん、Dropboxへ保存したり、読み込んだりもできちゃいます。</p>

<p>Google Driveにも対応しているので、議事録をとったらそのままDriveにアップして共有！なんてこともできちゃいますね！</p>

<p>Chromeアプリにもなっているので、<br/>
みんな<a href="https://chrome.google.com/webstore/detail/stackedit/iiooodelglhkcpgbajoejffhijaclcdg">インストール</a>しちゃえばいいよ</p>

<p>ちなみに<a href="https://github.com/benweet/stackedit">ソース</a>がGitHubで公開されているので、他のサービスと連携したかったら自分で追加できると思います。(たぶん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013年の抱負]]></title>
    <link href="http://naonya3.github.io/blog/2013/01/17/2013year/"/>
    <updated>2013-01-17T21:18:00+09:00</updated>
    <id>http://naonya3.github.io/blog/2013/01/17/2013year</id>
    <content type="html"><![CDATA[<p>新年明けましておめでとうございます。<br/>
せっかく何度目か分からないblogを立ち上げたので、今年の抱負を書いておきます。</p>

<h2>結婚生活に慣れる</h2>

<p>私事ですが、先月入籍致しました。</p>

<p>もう６年も付き合い４年も一緒に暮らしていますが、結婚を機にお互いもっと相手を思いやれる行動が出来るようになりたいと思います。</p>

<p>あと、僕はもっと稼げるようになりたいです。</p>

<p>早く子供は欲しいと思っていて、子供がなにか好きな事をやりたい時、（甘やかすつもりはありませんが）お金の問題であきらめなきゃいけないなんて、
本当につまらない事だとおもうので、がっつり稼ぎたいです。</p>

<p>式は２月２４日を予定しております。Facebook/Twitter等で見かけたら、暖かく見守って頂けたらと幸いです。</p>

<h2>個人サービスをリリース</h2>

<p>インスタレーションやサイネージ、ツール的なアプリも作るの好きなのですが、
やっぱり僕は”場”を作りたいと、最近改めて感じるようになりました。</p>

<p>小学生の頃からwebページを作リ初めて（ホームページって呼んでましたね）何を一番最初にやったかって言うと、
CGIの掲示板を開設することでした。その後チャットなども開設して、部活の友達やクラスの仲がいい奴と遅くまで話していました。</p>

<p>たぶんそれがすごく楽しかったから、今でもweb制作続けているのだし、大学に入ってからですがサーバサイドの言語も勉強したのだと思います。
アフィリエイトが流行りだした時期でそういう下心もあった事は否定しないけど！！</p>

<p>という事で、本質に戻って今年は人が集まるサービス作りたいです。</p>

<h2>iOSアプリもリリース</h2>

<p>iPhoneでてすぐデベロッパー登録したにも関わらず、まだ個人で何もリリースしていません。</p>

<p>このままでは死ねないので、しょぼくていいので何かリリースしたい。</p>

<p>あわよくば有料で売って<a href="http://www.apple.com/jp/displays/">Thunderbolt Display</a>買える位稼ぎたい。</p>

<p>これは別にサービスじゃ無くてもいいかな。</p>

<h2>Rubyを扱えるようになる</h2>

<p>上の<strong>個人サービスをリリース</strong>に関係するのですが、空き時間でサービスを作る上でスピード感は大切だと思うので、
なんだか制作スピード上がりそうなRuby on Railsを使う為です。あと日本発の言語を日本のプログラマーが嗜んでなくてどうする。</p>

<p><strong>あと、モテそうだからです。</strong></p>

<h2>まとめ</h2>

<p>とりあえず、まとめると</p>

<p><strong>ぐだぐだ言ってないで、とっととつくる一年にします。</strong></p>

<p>仕事では真面目に良いものつくってるので、個人では不完全でしょぼくても良いので、がんがん短いスパンで
どんどんアウトプットして行きたい所存です！</p>

<p>2013年、みなさまよろしくお願い致します。</p>
]]></content>
  </entry>
  
</feed>

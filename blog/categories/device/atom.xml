<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Device | naonya3.me]]></title>
  <link href="http://naonya3.me/blog/categories/device/atom.xml" rel="self"/>
  <link href="http://naonya3.me/"/>
  <updated>2014-07-14T18:34:38+09:00</updated>
  <id>http://naonya3.me/</id>
  <author>
    <name><![CDATA[にょす(@naonya3)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[子供も大人も楽しめるRomoで遊んできた話]]></title>
    <link href="http://naonya3.me/blog/2014/07/14/romo/"/>
    <updated>2014-07-14T17:07:51+09:00</updated>
    <id>http://naonya3.me/blog/2014/07/14/romo</id>
    <content type="html"><![CDATA[<p>昨日<a href="http://everevo.com/event/13478">「iPhone x ロボットハッカソン
大人の夏休みの自由研究 〜Romoで絶対起きられる目覚まし時計を作ろう〜」</a>に参加してきました。</p>

<p><img src="http://everevo.com/uploads/event-header/13/da19367211e434fab40e8b93470236f2.png" alt="http://everevo.com/uploads/event-header/13/da19367211e434fab40e8b93470236f2.png" /></p>

<p>タイトル通り、Romoを使って目覚まし時計を作るハッカソンです。</p>

<h2>Romoとは</h2>

<p><a href="http://www.romotive.jp/">公式サイト</a>(<a href="http://www.romotive.jp/">http://www.romotive.jp/</a>)</p>

<p>つまるところ、<strong>iPhoneを挿すと操作できるロボット</strong>で、用意されているアプリ以外にも自分でプログラムを書いて操作できちゃいます。</p>

<h2>Romo SDKでできること</h2>

<h3>Romoのキャタピラの操作</h3>

<p>左右別々に操作するAPIに加え、簡単に前進後退回転を行うためのAPIが用意されています。</p>

<h3>RomoのLEDを操作</h3>

<p>今回は使いませんでしたが、LEDも操作できます。</p>

<h3>RomoのキャラクターUI操作</h3>

<p>Romoにはキャラクターがいるのですが、このキャラクターの表情を操作したり、声を出させたりを簡単に行えます。</p>

<p>上記２つはRomoに接続しないと動作しませんが、このAPI郡はRomoが無くても動作します。</p>

<p>とにかく簡単で可愛いので、画面に関してはこのキャラクターを動かしておけばどうにかなります。</p>

<h2>当日の様子</h2>

<p>会場は<a href="http://hubtokyo.com/">HUB Tokyo</a>でした。</p>

<p>会場に着くとRomoが貰え、簡単な挨拶と説明後直ぐに開発がスタート。</p>

<p><a href="http://d.hatena.ne.jp/shu223/20140713/1405235307">堤さん</a>の近くに座っていたのですが、同じ職場に居た頃はあまり近くで開発したことがなかったので楽しかったです。</p>

<blockquote class="twitter-tweet" lang="ja"><p>参加者の皆さん、一日お疲れ様でした！皆さん、独創的なアラームアプリのデモで沢山楽しませて頂きました！ <a href="https://twitter.com/hashtag/Romo%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3?src=hash">#Romoハッカソン</a> <a href="https://twitter.com/RomotiveJP">@RomotiveJP</a> <a href="http://t.co/XvUOiFU898">pic.twitter.com/XvUOiFU898</a></p>&mdash; Spotry.me (@spotryme) <a href="https://twitter.com/spotryme/statuses/488306072461930496">2014, 7月 13</a></blockquote>


<script async src="http://naonya3.me//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>他にもいろいろな方が記事にされているので、そちらも読んでいただくともっと楽しいかと思います。</p>

<ul>
<li><a href="http://www.romotive.jp/event/20140714/index.html">Romoハッカソン with GUILD@ HUBTokyo</a></li>
<li><a href="http://spotry.me/2014/romo-sdk-hackathon-to-build-alarm-app-on-ios/">【イベント】Romo/ロモのSDKを使ってアラームアプリを作成してみよう！「第一回ROMOハッカソン」にお邪魔してきたので、その様子をたっぷりとお伝えします！</a></li>
<li><a href="http://d.hatena.ne.jp/shu223/20140713/1405235307">自作iOSアプリで制御できるロボット、Romo のハッカソンに参加してきました</a></li>
<li><a href="http://yoonchulkoh.hatenablog.com/entry/2014/07/14/103303">体感型のエデュケーショナルロボットRomoのハッカソンに行ってきました</a></li>
<li><a href="http://cocopon.me/blog/?p=4963">自走式のかわいいiPhoneロボ「Romo」のハッカソンに参加してきました</a></li>
<li><a href="http://blog.morizotter.com/2014/07/13/iphone-romo-alarm-clock/">iPhoneと合体してかわいく動くRomoをプログラミングするハッカソンに参加してきました！</a></li>
</ul>


<h2>作ったもの</h2>

<p>目覚まし時計がテーマだったので、<strong>Romoを釣ることができるアプリを作りました</strong>。</p>

<p>2台のiPhoneを使い、片方をRomoに(魚側)、もう片方を手に持ち(竿側)遊びます。</p>

<p>一応目覚まし時計なので、朝方の方がRomoを釣りやすい設定にしています。
Romoを釣りたかったら早起きするべし、ってことです。</p>

<p>技術的な話をすると、</p>

<ul>
<li>MultipeerConnectivityで2台のiPhoneを通信</li>
<li>CoreMotionで竿側のキャスティングやフッキングといった動作を検出</li>
</ul>


<p>あとは、キャスティング、フッキングなどのイベントをRomoが受け取ったら
前進や後退をさせて釣りっぽく演出しています。</p>

<p>竿側のiPhoneの画面をくるくる触ると糸が巻けて、Romoが近づいてきます。</p>

<p>Romoの画面をタッチするとGetです。</p>

<p>記念撮影などして、リリースしてあげましょう。</p>

<p>池澤あやか賞も貰えて最高です。</p>

<blockquote class="twitter-tweet" lang="ja"><p>お疲れ様でした。Romo可愛いです [pic] — <a href="https://t.co/IR37bX7T6T">https://t.co/IR37bX7T6T</a></p>&mdash; にょす君 (@naonya3) <a href="https://twitter.com/naonya3/statuses/488266710189740033">2014, 7月 13</a></blockquote>


<script async src="http://naonya3.me//platform.twitter.com/widgets.js" charset="utf-8"></script>


<h2>まとめ</h2>

<p>ゆるい雰囲気のハッカソンで、終始楽しく開発することが出来ました。</p>

<p>RomoSDKは簡単に扱えるように設計されていたので、iPhone開発者ならば特に躓くこと無くRomoを操作できると思います。</p>

<h2>おまけ</h2>

<p>Romoをもらうことが出来たので、家に帰ってから公式アプリで遊んでみました。子供向けに作られていますが、これが結構楽しい！</p>

<p>Romoがちゃんと感情のあるロボットに見えてきます。自分で作ってる時はこんな気持にならなかったのに！(笑) 小学生くらいの子なら、大人が最初に一緒に遊んであげれば十分につかいこなせるのでは。</p>

<p>まだ日本では発売前ですが、こちらで予約受け付けしているので興味のある方はいかがでしょうか？</p>

<ul>
<li><a href="http://www.romotive.jp/item/ROMO.html">http://www.romotive.jp/item/ROMO.html</a>(2014年7月24日頃の出荷予定)</li>
</ul>


<p><img src="http://www.romotive.jp/client_info/ROMO/itemimage/romo5-3quarter-xlg.png" alt="http://www.romotive.jp/client_info/ROMO/itemimage/romo5-3quarter-xlg.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IRKit]]></title>
    <link href="http://naonya3.me/blog/2014/01/05/irkit/"/>
    <updated>2014-01-05T23:04:00+09:00</updated>
    <id>http://naonya3.me/blog/2014/01/05/irkit</id>
    <content type="html"><![CDATA[<p><img src="https://copy.com/thumbs_public/ZcK4LNj1hEy1/IMG_7214.JPG?revision=35&amp;size=512" alt="IRKit" /></p>

<p>遠隔操作できる家電リモコン。</p>

<p>お布団の中からリビングのエアコンを入れてみたり
外出先からエアコンを入れてみたり</p>

<p>・・・寒いので、エアコンネタばかり出てきてしまいましたが、、</p>

<p>前職の先輩の<a href="https://twitter.com/maaash">mash</a>さんが、そういったことを手軽に行えるようにするデバイス「<a href="http://getirkit.com/">IRKit</a>」をなんと作り上げてしまったので、お試し版をお借りしました。</p>

<p>まだお試し版ということで、専用アプリがリリースされていなかったりと通常より手順がむずいですが、正式リリース時にはすごく使いやすいデバイスになっていると思います。</p>

<p>たぶんWifiが入っている家なら、IRKitを電源に差し、専用アプリからIRKitにアクセスするだけで使えちゃえます。</p>

<p>ということで、設定して遊んでみました。</p>

<h2>IRKitの初期設定</h2>

<p>まずはIRKitをWifiに接続するためにアプリをインストールします。</p>

<p>先ほど、専用アプリがリリースされていないと書きましたが、<a href="https://github.com/irkit/ios-sdk">github</a>にはソースコードがありますので、そちらをインストールして使います。</p>

<p><code>Minimal</code>というプロジェクトが設定アプリ＋αです。</p>

<p>ビルドにはCocoaPodで必要ライブラリをインストールする必要がありますが、正式版ではあまり関係のない話だと思いますので省略します。</p>

<p>アプリを起動して、画面の指示にしたがって設定するだけです。</p>

<p>と、言っても<strong>たったの3STEP</strong>です。</p>

<ol>
<li>MicroUSBでIRKitを電源に接続</li>
<li>アプリに接続する無線LANの情報を入力する</li>
<li><strong>モールス信号</strong>でIRKitに無線LANの設定情報を送る</li>
</ol>


<p><img src="https://copy.com/thumbs_public/Y4j7vxtPuE7o/IMG_7198.JPG?revision=36&amp;size=512" alt="モールス信号で無線の設定情報を送る" /></p>

<p>右はモールス信号を送っている所です。遊び心があってすごい好きです。</p>

<p>設定が完了すると、赤色だったSTATUSランプが青色になります。</p>

<h2>IRKitでリモコンの信号を受信する</h2>

<p><strong>IRKitに向けてリモコンを押すだけ</strong>です。</p>

<p><img src="https://copy.com/thumbs_public/f1ddp3Yyl9Kr/IMG_7210.JPG?revision=37&amp;size=512" alt="押すだけ" /></p>

<p>先ほどインストールした<code>Minimal</code>というアプリはリモコンの信号を学習する機能がついていますので、そちらを使えば受信したデータを簡易的に管理することができます。</p>

<p>また、IRKit自身にHTTPサーバがあり、APIが動いていますので
直接APIを叩いて<strong>直近のリモコンのデータを取得</strong>したり、<strong>取得したリデータをIRKitから赤外線で送信</strong>させたりする事もできます。</p>

<p><a href="http://getirkit.com/">IRKit公式</a>サイトに書いてある情報のままですが、簡単にその方法を書きます</p>

<h2>IRKitのAPIを叩いてリモコンデータを取得する</h2>

<h3>まずはIRKitのIPアドレスを取得します</h3>

<p><code>
$ dns-sd -B _irkit._tcp
</code>
このまま打てばok。</p>

<p><code>
$ dns-sd -B _irkit._tcp
Browsing for _irkit._tcp
DATE: ---Sun 05 Jan 2014---
19:52:09.254  ...STARTING...
Timestamp     A/R Flags if Domain                    Service Type              Instance Name
19:52:09.911  Add     2  4 local.                    _irkit._tcp.              irkitd303
</code></p>

<p><code>Instance Name</code>の所を見ます。私の環境だと<code>irkitd303</code>ですね。</p>

<p>で、</p>

<p><code>
$ dns-sd -G v4 [Instance Name].local
</code>
です。</p>

<p><code>
$ dns-sd -G v4 irkitd303.local
DATE: ---Sun 05 Jan 2014---
19:52:55.967  ...STARTING...
Timestamp     A/R Flags if Hostname                  Address                                      TTL
19:52:56.606  Add     2  4 irkitd303.local.          192.168.11.9                                 10
</code></p>

<p><code>Address</code>が分かりました。</p>

<h3>リモコンのデータを見る</h3>

<p>IRKitが受信した直近のリモコンから送信された赤外線データを見るには<code>messages</code>APIをつかいます。</p>

<p>```
$ curl -i &ldquo;<a href="http://192.168.11.9/messages">http://192.168.11.9/messages</a>&rdquo;
HTTP/1.0 200 OK
Access-Control-Allow-Origin: *
Server: IRKit/1.3.0.188.gbc9a662
Content-Type: text/plain</p>

<p>{&ldquo;format&rdquo;:&ldquo;raw&rdquo;,&ldquo;freq&rdquo;:38,&ldquo;data&rdquo;:[4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,52381,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150]}
```
JSONで直近のデータが返ってきました。Bodyが空だった場合、もう一度IRKitにリモコンを向けてボタンを押してください。
STATUSランプが点滅すればOKです。</p>

<p>ちなみのこのデータはテレビのボリュームアップ。</p>

<h3>IRKitからデータを送信する</h3>

<p>この受信データJSONを<code>messages</code>APIにPOSTすることで、同じ信号をIRKitから送信することができます。</p>

<p><code>
$ curl -i "http://192.168.11.9/messages" -d '{"format":"raw","freq":38,"data":[4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150,50610,4713,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,2368,1150,1150,1150,1150,1150,1150,1150,1150]}'
HTTP/1.0 200 OK
Access-Control-Allow-Origin: *
Server: IRKit/1.3.0.188.gbc9a662
Content-Type: text/plain
</code></p>

<p>IRKitのSTATUSランプが点灯し、テレビのボリュームが上がった。</p>

<p><strong>楽しいｗ</strong></p>

<h2>まとめ</h2>

<p>Curlから家電操作するの楽しぃぃぃ！</p>

<p>APIがシンプルですし、いろいろ組み合わせれば<strong><strong>ハイテクな家</strong></strong>が実現できそうです。</p>

<p>今はまだ準備中みたいですけど、そのうち外出先から自宅にあるIRKitへアクセスする手段も用意されるみたいです。</p>

<p>公式サイトの<code>IRKit Server HTTP API</code>がそうかな。</p>

<p>もちろん今でも少し知識があれば外部からIRKitにアクセスすることは可能です。</p>

<p>外出先から寒ぅい部屋のエアコンをつけたり消したりできて大変捗りそうでwktkですね！</p>

<p>ちなみに僕はエアコンの電源をよく切り忘れて奥さんに怒られるので、「外出先からエアコンの電源を切れる」というだけで精神衛生上とても良い効果がありそう。</p>

<hr />

<p>ちなみにIRKitは簡単に蓋が開けられて、中はArduinoなので私はここに温度センサをつけて、ハイテクアクアリウムを構築する予定です。</p>

<p><img src="https://copy.com/thumbs_public/wUTLjtZZMyVp/IMG_7205.JPG?revision=38&amp;size=512" alt="分解した" /></p>
]]></content>
  </entry>
  
</feed>
